name: Bump Version

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Technical Branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'technical'

      - name: Checkout Technical Branch
        uses: actions/checkout@v3
        with:
          ref: 'technical'

      - name: Update Technical Branch
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set POM_VERSION
        run: echo "POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Bump Version
        run: |
          NEW_VERSION=$(echo ${POM_VERSION} | awk -F. '{ minor=$2+1; print $1"."minor"."$3}')
          echo "New version: ${NEW_VERSION}"
          mvn versions:set -DnewVersion=${NEW_VERSION} -DgenerateBackupPoms=false
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Set version for next release: ${NEW_VERSION}"
          git push

      - name: Create Pull Request
        id: cpr
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "technical"
          destination_branch: "main"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "Bump Version"

      - name: Approve Pull Request
        uses: juliangruber/approve-pull-request-action@v1
        with:
          github-token: ${{ secrets.TECHNICAL_USER_TOKEN }}
          number: ${{ steps.cpr.outputs.pr_number }}"

      - name: Merge Pull Request
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.cpr.outputs.pr_number }}"
          method: squash